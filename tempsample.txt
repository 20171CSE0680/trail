<Window x:Class="WpfApp3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp3"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Button Content="Fetch Data" HorizontalAlignment="Left" Margin="499,49,0,0" VerticalAlignment="Top" Height="30" Width="89" Click="Button_Click"/>
        <DataGrid x:Name="dataGridView1" Margin="0,104,0,0"/>
        <TextBox x:Name="pathbx" HorizontalAlignment="Left" Margin="83,54,0,0" Text="C:\\Users\\srii ideapad\\Desktop\\emp.txt" TextWrapping="Wrap" VerticalAlignment="Top" Width="240" Height="34"/>
        <Label Content="Path" HorizontalAlignment="Left" Margin="35,60,0,0" VerticalAlignment="Top"/>

    </Grid>
</Window>


888888888888888888888888888888888888888888888888888888888888888888

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WpfApp3
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }
        
        private void Button_Click(object sender, RoutedEventArgs e)
        {
            string s = pathbx.Text;
            
            System.IO.StreamReader file = new System.IO.StreamReader(s);
            //string[] columnnames = file.ReadLine().Split(',');
            DataTable dt = new DataTable();
            /*foreach (string c in columnnames)
            {
                dt.Columns.Add(c);
            }*/
            dt.Columns.Add("Name");
            string newline;
            while ((newline = file.ReadLine()) != null)
            {
                DataRow dr = dt.NewRow();
                
               
                    dr[0] = newline;
                
                dt.Rows.Add(dr);
            }
            file.Close();
            dataGridView1.ItemsSource = dt.DefaultView;
        }
    }
}
88888888888888888888888888888888888888888888888888888888888888888888888888



<Window x:Class="WpfApp3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp3"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="102*"/>
            <RowDefinition Height="115*"/>
        </Grid.RowDefinitions>
        <Button Content="Fetch Data" HorizontalAlignment="Left" Margin="499,49,0,0" VerticalAlignment="Top" Height="30" Width="89" Click="Button_Click"/>
        <DataGrid x:Name="dataGridView1" Margin="0,104,0,0" Grid.RowSpan="2"/>
        <TextBox x:Name="pathbx" HorizontalAlignment="Left" Margin="83,54,0,0" Text="C:\\Users\\srii ideapad\\Desktop\\emp.txt" TextWrapping="Wrap" VerticalAlignment="Top" Width="240" Height="34"/>
        <Label Content="Path" HorizontalAlignment="Left" Margin="35,60,0,0" VerticalAlignment="Top"/>

    </Grid>
</Window>
8888888888888888888888888888888888888888888888888888888888888888888888888888888888888

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WpfApp3
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            startup();
        }
        void startup()
        {
            string fileName = "Metadata.json";
            try
            {
                string jsonString = File.ReadAllText(fileName);
                List<string> p = JsonSerializer.Deserialize<List<string>>(jsonString);

                DataTable dt = new DataTable();
                p.Sort();
                dt.Columns.Add("Name");
                foreach(string pp in p)
                {
                    DataRow dr = dt.NewRow();
                    dr[0] = pp;

                    dt.Rows.Add(dr);
                }
                dataGridView1.ItemsSource = dt.DefaultView;
                
                SortDataGrid(dataGridView1);


            }
            catch(Exception e)
            {

            }
        }
       

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            string s = pathbx.Text;
             List<String> p = new List<String>();
            
            
            System.IO.StreamReader file = new System.IO.StreamReader(s);
            
            DataTable dt = new DataTable();
            string jsonString = "";
            dt.Columns.Add("Name");
            string newline;
            while ((newline = file.ReadLine()) != null)
            {
                
                DataRow dr = dt.NewRow();
                
                //Trace.WriteLine(n.Name);
                
               
                    dr[0] = newline;
                
                dt.Rows.Add(dr);
                p.Add(newline);

                 
            }
            
            file.Close();
            dataGridView1.ItemsSource = dt.DefaultView;
            SortDataGrid(dataGridView1);
            string fileName = "Metadata.json";
            jsonString = JsonSerializer.Serialize(p);

            File.WriteAllText(fileName, jsonString);
        }
        public static void SortDataGrid(DataGrid dataGrid, int columnIndex = 0, ListSortDirection sortDirection = ListSortDirection.Ascending)
        {
            var column = dataGrid.Columns[columnIndex];

            // Clear current sort descriptions
            dataGrid.Items.SortDescriptions.Clear();

            // Add the new sort description
            dataGrid.Items.SortDescriptions.Add(new SortDescription(column.SortMemberPath, sortDirection));

            // Apply sort
            foreach (var col in dataGrid.Columns)
            {
                col.SortDirection = null;
            }
            column.SortDirection = sortDirection;

            // Refresh items to display sort
            dataGrid.Items.Refresh();
        }

    }
}

